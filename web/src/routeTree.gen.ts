/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as protectedRoutesRouteRouteImport } from './routes/(protectedRoutes)/route'
import { Route as authRouteRouteImport } from './routes/(auth)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as protectedRoutesAdminRouteRouteImport } from './routes/(protectedRoutes)/admin/route'
import { Route as authVerifyEmailIndexRouteImport } from './routes/(auth)/verify-email/index'
import { Route as authSignupIndexRouteImport } from './routes/(auth)/signup/index'
import { Route as authSigninIndexRouteImport } from './routes/(auth)/signin/index'
import { Route as authResetPasswordIndexRouteImport } from './routes/(auth)/reset-password/index'
import { Route as authResendVerificationIndexRouteImport } from './routes/(auth)/resend-verification/index'
import { Route as authForgotPasswordIndexRouteImport } from './routes/(auth)/forgot-password/index'
import { Route as protectedRoutesAdminDashboardIndexRouteImport } from './routes/(protectedRoutes)/admin/dashboard/index'
import { Route as authAuthCallbackIndexRouteImport } from './routes/(auth)/auth/callback/index'

const protectedRoutesRouteRoute = protectedRoutesRouteRouteImport.update({
  id: '/(protectedRoutes)',
  getParentRoute: () => rootRouteImport,
} as any)
const authRouteRoute = authRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const protectedRoutesAdminRouteRoute =
  protectedRoutesAdminRouteRouteImport.update({
    id: '/admin',
    path: '/admin',
    getParentRoute: () => protectedRoutesRouteRoute,
  } as any)
const authVerifyEmailIndexRoute = authVerifyEmailIndexRouteImport.update({
  id: '/verify-email/',
  path: '/verify-email/',
  getParentRoute: () => authRouteRoute,
} as any)
const authSignupIndexRoute = authSignupIndexRouteImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => authRouteRoute,
} as any)
const authSigninIndexRoute = authSigninIndexRouteImport.update({
  id: '/signin/',
  path: '/signin/',
  getParentRoute: () => authRouteRoute,
} as any)
const authResetPasswordIndexRoute = authResetPasswordIndexRouteImport.update({
  id: '/reset-password/',
  path: '/reset-password/',
  getParentRoute: () => authRouteRoute,
} as any)
const authResendVerificationIndexRoute =
  authResendVerificationIndexRouteImport.update({
    id: '/resend-verification/',
    path: '/resend-verification/',
    getParentRoute: () => authRouteRoute,
  } as any)
const authForgotPasswordIndexRoute = authForgotPasswordIndexRouteImport.update({
  id: '/forgot-password/',
  path: '/forgot-password/',
  getParentRoute: () => authRouteRoute,
} as any)
const protectedRoutesAdminDashboardIndexRoute =
  protectedRoutesAdminDashboardIndexRouteImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => protectedRoutesAdminRouteRoute,
  } as any)
const authAuthCallbackIndexRoute = authAuthCallbackIndexRouteImport.update({
  id: '/auth/callback/',
  path: '/auth/callback/',
  getParentRoute: () => authRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof protectedRoutesRouteRouteWithChildren
  '/admin': typeof protectedRoutesAdminRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordIndexRoute
  '/resend-verification': typeof authResendVerificationIndexRoute
  '/reset-password': typeof authResetPasswordIndexRoute
  '/signin': typeof authSigninIndexRoute
  '/signup': typeof authSignupIndexRoute
  '/verify-email': typeof authVerifyEmailIndexRoute
  '/auth/callback': typeof authAuthCallbackIndexRoute
  '/admin/dashboard': typeof protectedRoutesAdminDashboardIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof protectedRoutesRouteRouteWithChildren
  '/admin': typeof protectedRoutesAdminRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordIndexRoute
  '/resend-verification': typeof authResendVerificationIndexRoute
  '/reset-password': typeof authResetPasswordIndexRoute
  '/signin': typeof authSigninIndexRoute
  '/signup': typeof authSignupIndexRoute
  '/verify-email': typeof authVerifyEmailIndexRoute
  '/auth/callback': typeof authAuthCallbackIndexRoute
  '/admin/dashboard': typeof protectedRoutesAdminDashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(auth)': typeof authRouteRouteWithChildren
  '/(protectedRoutes)': typeof protectedRoutesRouteRouteWithChildren
  '/(protectedRoutes)/admin': typeof protectedRoutesAdminRouteRouteWithChildren
  '/(auth)/forgot-password/': typeof authForgotPasswordIndexRoute
  '/(auth)/resend-verification/': typeof authResendVerificationIndexRoute
  '/(auth)/reset-password/': typeof authResetPasswordIndexRoute
  '/(auth)/signin/': typeof authSigninIndexRoute
  '/(auth)/signup/': typeof authSignupIndexRoute
  '/(auth)/verify-email/': typeof authVerifyEmailIndexRoute
  '/(auth)/auth/callback/': typeof authAuthCallbackIndexRoute
  '/(protectedRoutes)/admin/dashboard/': typeof protectedRoutesAdminDashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/forgot-password'
    | '/resend-verification'
    | '/reset-password'
    | '/signin'
    | '/signup'
    | '/verify-email'
    | '/auth/callback'
    | '/admin/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/forgot-password'
    | '/resend-verification'
    | '/reset-password'
    | '/signin'
    | '/signup'
    | '/verify-email'
    | '/auth/callback'
    | '/admin/dashboard'
  id:
    | '__root__'
    | '/'
    | '/(auth)'
    | '/(protectedRoutes)'
    | '/(protectedRoutes)/admin'
    | '/(auth)/forgot-password/'
    | '/(auth)/resend-verification/'
    | '/(auth)/reset-password/'
    | '/(auth)/signin/'
    | '/(auth)/signup/'
    | '/(auth)/verify-email/'
    | '/(auth)/auth/callback/'
    | '/(protectedRoutes)/admin/dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authRouteRoute: typeof authRouteRouteWithChildren
  protectedRoutesRouteRoute: typeof protectedRoutesRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(protectedRoutes)': {
      id: '/(protectedRoutes)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedRoutesRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(protectedRoutes)/admin': {
      id: '/(protectedRoutes)/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof protectedRoutesAdminRouteRouteImport
      parentRoute: typeof protectedRoutesRouteRoute
    }
    '/(auth)/verify-email/': {
      id: '/(auth)/verify-email/'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof authVerifyEmailIndexRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/signup/': {
      id: '/(auth)/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupIndexRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/signin/': {
      id: '/(auth)/signin/'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof authSigninIndexRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/reset-password/': {
      id: '/(auth)/reset-password/'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof authResetPasswordIndexRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/resend-verification/': {
      id: '/(auth)/resend-verification/'
      path: '/resend-verification'
      fullPath: '/resend-verification'
      preLoaderRoute: typeof authResendVerificationIndexRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(auth)/forgot-password/': {
      id: '/(auth)/forgot-password/'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordIndexRouteImport
      parentRoute: typeof authRouteRoute
    }
    '/(protectedRoutes)/admin/dashboard/': {
      id: '/(protectedRoutes)/admin/dashboard/'
      path: '/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof protectedRoutesAdminDashboardIndexRouteImport
      parentRoute: typeof protectedRoutesAdminRouteRoute
    }
    '/(auth)/auth/callback/': {
      id: '/(auth)/auth/callback/'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof authAuthCallbackIndexRouteImport
      parentRoute: typeof authRouteRoute
    }
  }
}

interface authRouteRouteChildren {
  authForgotPasswordIndexRoute: typeof authForgotPasswordIndexRoute
  authResendVerificationIndexRoute: typeof authResendVerificationIndexRoute
  authResetPasswordIndexRoute: typeof authResetPasswordIndexRoute
  authSigninIndexRoute: typeof authSigninIndexRoute
  authSignupIndexRoute: typeof authSignupIndexRoute
  authVerifyEmailIndexRoute: typeof authVerifyEmailIndexRoute
  authAuthCallbackIndexRoute: typeof authAuthCallbackIndexRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authForgotPasswordIndexRoute: authForgotPasswordIndexRoute,
  authResendVerificationIndexRoute: authResendVerificationIndexRoute,
  authResetPasswordIndexRoute: authResetPasswordIndexRoute,
  authSigninIndexRoute: authSigninIndexRoute,
  authSignupIndexRoute: authSignupIndexRoute,
  authVerifyEmailIndexRoute: authVerifyEmailIndexRoute,
  authAuthCallbackIndexRoute: authAuthCallbackIndexRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface protectedRoutesAdminRouteRouteChildren {
  protectedRoutesAdminDashboardIndexRoute: typeof protectedRoutesAdminDashboardIndexRoute
}

const protectedRoutesAdminRouteRouteChildren: protectedRoutesAdminRouteRouteChildren =
  {
    protectedRoutesAdminDashboardIndexRoute:
      protectedRoutesAdminDashboardIndexRoute,
  }

const protectedRoutesAdminRouteRouteWithChildren =
  protectedRoutesAdminRouteRoute._addFileChildren(
    protectedRoutesAdminRouteRouteChildren,
  )

interface protectedRoutesRouteRouteChildren {
  protectedRoutesAdminRouteRoute: typeof protectedRoutesAdminRouteRouteWithChildren
}

const protectedRoutesRouteRouteChildren: protectedRoutesRouteRouteChildren = {
  protectedRoutesAdminRouteRoute: protectedRoutesAdminRouteRouteWithChildren,
}

const protectedRoutesRouteRouteWithChildren =
  protectedRoutesRouteRoute._addFileChildren(protectedRoutesRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authRouteRoute: authRouteRouteWithChildren,
  protectedRoutesRouteRoute: protectedRoutesRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
